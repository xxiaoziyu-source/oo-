function love.load()
    -- 窗口设置
    love.window.setTitle("Dreamkill UI Demo")
    love.window.setMode(800, 600, {resizable = true})

    -- 颜色定义
    local colors = {
        primary = {126/255, 34/255, 206/255, 0.8},
        secondary = {6/255, 182/255, 212/255, 0.8},
        dark = {30/255, 41/255, 59/255, 0.9},
        light = {248/255, 250/255, 252/255, 1},
        gray = {100/255, 116/255, 139/255, 0.6}
    }
    _G.colors = colors

    -- 左侧菜单数据
    local leftMenu = {
        {title = "Word", isSelected = true},
        {title = "Combat", icon = "⚡"},
        {title = "Movement", icon = "➡️"},
        {title = "Render", icon = "👁️"},
        {title = "Player", icon = "👤"},
        {title = "Misc", icon = "❓"},
        {title = "Configurations", icon = "⚙️", isConfig = true},
        {title = "导入配置", icon = "➕", isButton = true},
        {title = "布吉岛", isSub = true},
        {title = "EC", isSub = true},
        {title = "花雨庭", isSub = true},
        {title = "租赁服", isSub = true},
    }
    _G.leftMenu = leftMenu

    -- 右侧功能开关数据
    local toggles = {
        {name = "点击破坏", desc = "准心指向的地方点击即可破坏."},
        {name = "矩阵破坏", desc = "向破坏的那个点半径延伸破坏n格."},
        {name = "获取权限", desc = "强制获取管理/成员权限."},
        {name = "游戏模式", desc = "强制获取创造/生存/冒险/旁观模式."},
        {name = "自动搭路", desc = "朝向脚底自动搭方块."},
    }
    _G.toggles = toggles
    for i, v in ipairs(toggles) do
        v.enabled = false
    end

    -- 顶部栏状态
    _G.topTab = "Word"
end

function love.update(dt)
    -- 此处可添加交互逻辑（如按钮点击、拖拽等）
end

function love.draw()
    -- 背景
    love.graphics.clear(0.1, 0.1, 0.1)

    -- 顶部栏
    drawTopBar()

    -- 左侧菜单
    drawLeftMenu()

    -- 右侧内容区
    drawRightContent()

    -- 版本信息
    love.graphics.setColor(colors.gray)
    love.graphics.printf("Dreamkill Version:3.0.5", 10, love.graphics.getHeight() - 30, 200, "left")
    love.graphics.printf("6 times uid:001", love.graphics.getWidth() - 150, love.graphics.getHeight() - 30, 150, "right")
end

-- 绘制顶部栏
function drawTopBar()
    local w, h = love.graphics.getWidth(), 50
    love.graphics.setColor(colors.primary[1], colors.primary[2], colors.primary[3], 0.3)
    love.graphics.rectangle("fill", 0, 0, w, h)

    -- 左侧图标与标题
    love.graphics.setColor(colors.light)
    love.graphics.print("☰", 20, 15, 0, 1.5)
    love.graphics.print("Dreamkill", 50, 15, 0, 1.5)

    -- 中间标签页
    love.graphics.setColor(colors.light)
    love.graphics.print("🔍", 150, 20)
    love.graphics.setColor(colors.primary)
    love.graphics.rectangle("fill", 170, 10, 100, 30, 5)
    love.graphics.setColor(colors.light)
    love.graphics.print("Word +", 180, 18)

    -- 右侧窗口按钮
    love.graphics.setColor(colors.light)
    love.graphics.print("—", w - 60, 15, 0, 2)
    love.graphics.print("🗗", w - 30, 15, 0, 1.5)
end

-- 绘制左侧菜单
function drawLeftMenu()
    local w, h = 200, love.graphics.getHeight() - 50
    love.graphics.setColor(colors.dark)
    love.graphics.rectangle("fill", 0, 50, w, h)

    -- 菜单选项绘制
    local y = 60
    for i, item in ipairs(leftMenu) do
        local isSelected = item.isSelected or false
        local isConfig = item.isConfig or false
        local isButton = item.isButton or false
        local isSub = item.isSub or false

        -- 背景样式
        if isSelected or isConfig or isButton then
            love.graphics.setColor(colors.primary[1], colors.primary[2], colors.primary[3], 0.5)
        elseif isSub then
            love.graphics.setColor(colors.dark)
        else
            love.graphics.setColor(colors.dark[1], colors.dark[2], colors.dark[3], 0.3)
        end
        love.graphics.rectangle("fill", 10, y, w - 20, 30, 3)

        -- 文字与图标
        love.graphics.setColor(colors.light)
        if item.icon then
            love.graphics.print(item.icon .. " " .. item.title, 30, y + 5)
        else
            love.graphics.print(item.title, 30, y + 5)
        end

        y = y + 35
    end
end

-- 绘制右侧内容区
function drawRightContent()
    local x, y = 200, 50
    local w, h = love.graphics.getWidth() - 200, love.graphics.getHeight() - 50
    love.graphics.setColor(colors.dark[1], colors.dark[2], colors.dark[3], 0.6)
    love.graphics.rectangle("fill", x, y, w, h)

    -- 功能开关绘制
    local toggleY = 70
    for i, toggle in ipairs(toggles) do
        -- 开关背景
        love.graphics.setColor(colors.dark)
        love.graphics.rectangle("fill", x + 20, toggleY, w - 40, 40, 5)

        -- 开关名称与描述
        love.graphics.setColor(colors.light)
        love.graphics.print(toggle.name, x + 30, toggleY + 5, 0, 1.2)
        love.graphics.setColor(colors.gray)
        love.graphics.print(toggle.desc, x + 30, toggleY + 25, 0, 0.8)

        -- 开关按钮
        local toggleW = 50
        local toggleX = x + w - 70
        love.graphics.setColor(toggle.enabled and colors.primary or colors.gray)
        love.graphics.rectangle("fill", toggleX, toggleY + 10, toggleW, 20, 10)
        love.graphics.setColor(toggle.enabled and colors.light or colors.dark)
        love.graphics.circle("fill", toggle.enabled and toggleX + toggleW - 10 or toggleX + 10, toggleY + 20, 8)

        toggleY = toggleY + 50
    end
end

-- 处理鼠标点击（示例：开关交互）
function love.mousepressed(x, y, button)
    if button ~= 1 then return end

    local contentX, contentY = 200, 50
    local contentW, contentH = love.graphics.getWidth() - 200, love.graphics.getHeight() - 50
    if x < contentX or x > contentX + contentW or y < contentY or y > contentY + contentH then
        return
    end

    local toggleY = 70
    for i, toggle in ipairs(toggles) do
        local toggleX = contentX + contentW - 70
        local toggleW = 50
        local toggleH = 20
        if x > toggleX and x < toggleX + toggleW and y > toggleY + 10 and y < toggleY + 30 then
            toggle.enabled = not toggle.enabled
        end
        toggleY = toggleY + 50
    end
end
